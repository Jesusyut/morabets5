# --- BEGIN legacy wiring routes ---
from flask import request, jsonify
from props_adapter import get_player_props_for_league
from prop_shape import shape_and_add_fair

# Optional contextual import â€” skip if not ready
try:
    from contextual import get_contextual_hit_rate
except Exception:
    def get_contextual_hit_rate(player, stat, point, league):
        return None

def _ctx_rate_fraction(player, stat, point, league):
    r = get_contextual_hit_rate(player, stat, point, league)
    if r is None:
        return None
    return r/100.0 if r > 1 else r

@app.route("/api/<league>/props")
def api_league_props(league):
    rows = get_player_props_for_league(league)
    shaped = []
    for r in rows:
        s = shape_and_add_fair(r)
        # optional EV: add when contextual is available
        # c = _ctx_rate_fraction(s.get("player"), s.get("stat"), s.get("point"), league)
        # if c is not None:
        #     fair_over = s.get("fair",{}).get("prob",{}).get("over",0.0)
        #     s["edge_pct"] = round((c - fair_over) * 100.0, 2)
        shaped.append(s)
    return jsonify({"league": league.lower(), "count": len(shaped), "props": shaped})

@app.route("/player_props")
def player_props():
    league = request.args.get("league", "mlb").lower()
    return api_league_props(league)
# --- END legacy wiring routes ---
